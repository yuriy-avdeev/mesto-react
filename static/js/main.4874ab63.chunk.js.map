{"version":3,"sources":["images/logo.svg","components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","images/edit-pen.svg","components/Card.js","components/Main.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/api.js","utils/utils.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","Footer","CurrentUser","React","createContext","Card","memo","props","currentUser","useContext","isOwnCard","card","owner","_id","isLikedCard","likes","some","someLike","cardDeleteButtonClassName","cardLikeButtonClassName","onClick","onCardClick","style","backgroundImage","link","backgroundSize","name","type","aria-label","onCardLike","value","length","onCardDelete","Main","avatar","editPen","onEditAvatar","about","onEditProfile","onAddPlace","cards","map","i","ImagePopup","onClose","useEffect","handleEsc","evt","key","document","addEventListener","removeEventListener","target","currentTarget","PopupWithForm","title","isOpen","onSubmit","buttonText","children","EditProfilePopup","useState","setName","description","setDescription","preventDefault","onUpdateUser","id","placeholder","minLength","maxLength","onChange","required","EditAvatarPopup","newAvatarRef","useRef","current","onUpdateAvatar","reset","ref","AddPlacePopup","url","setUrl","api","headers","this","_url","_headers","res","ok","json","Promise","reject","status","statusText","a","fetch","_checkResponse","method","then","body","JSON","stringify","authorization","App","setCurrentUser","setCards","getUserInfo","userData","catch","err","console","log","getCards","dataCardList","slice","closeAllPopups","setIsEditAvatarPopupOpen","setIsAddPlacePopupOpen","setIsEditProfilePopupOpen","setSelectedCard","isEditProfilePopupOpen","isAddPlacePopupOpen","isEditAvatarPopupOpen","selectedCard","Provider","clickedCard","changeLikeCardStatus","returnedCard","deleteCard","filter","enteredUrl","setNewAvatar","enteredUserData","setUserInfo","cardData","saveNewCard","newCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4874ab63.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.5f3664ca.svg\";","import logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={logo} alt=\"логотип\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2021 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nexport const CurrentUser = React.createContext();","export default __webpack_public_path__ + \"static/media/edit-pen.6c7bf054.svg\";","import React from 'react';\r\nimport { CurrentUser } from '../contexts/CurrentUserContext';\r\n\r\nconst Card = React.memo((props) => {\r\n\r\n    const currentUser = React.useContext(CurrentUser);\r\n    const isOwnCard = props.card.owner._id === currentUser._id;\r\n    const isLikedCard = props.card.likes.some(someLike => someLike._id === currentUser._id);\r\n    // консты для именения рендера корзины и лайка (в className): -v\r\n    const cardDeleteButtonClassName = (`card__basket ${!isOwnCard && 'card__basket_hidden'}`);\r\n    const cardLikeButtonClassName = (`card__like ${isLikedCard && 'card__like_click'}`);\r\n\r\n    const handleClick = () => {\r\n        props.onCardClick(props.card);\r\n    }\r\n\r\n    const handleLikeClick = () => {\r\n        props.onCardLike(props.card);\r\n    }\r\n\r\n    const handleDeleteClick = () => {\r\n        props.onCardDelete(props.card);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n\r\n            <div\r\n                className=\"card__image\"\r\n                onClick={handleClick}\r\n                style={{\r\n                    backgroundImage: `url(${props.card.link})`,\r\n                    backgroundSize: 'cover',\r\n                }}>\r\n            </div>\r\n            <h2 className=\"card__caption\">{props.card.name}</h2>\r\n\r\n            <div className=\"card__like-area\">\r\n                <button\r\n                    className={cardLikeButtonClassName}\r\n                    type=\"button\"\r\n                    aria-label=\"поставим лайк\"\r\n                    onClick={handleLikeClick}\r\n                >\r\n                </button>\r\n                <p className=\"card__like-number\" value=\"like-number\">{props.card.likes.length}</p>\r\n            </div>\r\n\r\n            <button\r\n                className={cardDeleteButtonClassName}\r\n                type=\"button\"\r\n                aria-label=\"удаляем фотографию\"\r\n                onClick={handleDeleteClick}\r\n            >\r\n            </button>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Card;","import React from 'react';\r\nimport { CurrentUser } from '../contexts/CurrentUserContext';\r\nimport editPen from '../images/edit-pen.svg'\r\nimport Card from './Card'\r\n\r\nfunction Main(props) {\r\n\r\n    const currentUser = React.useContext(CurrentUser);\r\n\r\n    return (\r\n        <main className=\"page\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__avatar-container\">\r\n                    <div\r\n                        className=\"profile__photo\"\r\n                        style={{\r\n                            backgroundImage: `url(${currentUser && currentUser.avatar})`,\r\n                            backgroundSize: 'cover'\r\n                        }}\r\n                    >\r\n                    </div>\r\n                    <img\r\n                        className=\"profile__avatar-edit\"\r\n                        src={editPen}\r\n                        alt=\"изображение ручки-редактора\"\r\n                        onClick={props.onEditAvatar}\r\n                    />\r\n                </div>\r\n                <div className=\"profile__information\">\r\n                    <div className=\"profile__person\">\r\n                        <h1 className=\"profile__name\">{currentUser && currentUser.name}</h1>\r\n                        <p className=\"profile__activity\">{currentUser && currentUser.about}</p>\r\n                    </div>\r\n                    <button\r\n                        className=\"profile__editor-popup profile__click\"\r\n                        type=\"button\"\r\n                        aria-label=\"откроем редактор профиля пользователя\"\r\n                        onClick={props.onEditProfile}\r\n                    ></button>\r\n                </div>\r\n                <button\r\n                    className=\"profile__add-place profile__click\"\r\n                    aria-label=\"добавим фотографию\"\r\n                    type=\"button\"\r\n                    onClick={props.onAddPlace}\r\n                ></button>\r\n            </section>\r\n\r\n            <section className=\"places\">\r\n                {\r\n                    props.cards.map((card, i) => (\r\n                        <Card\r\n                            key={card._id}\r\n                            onCardClick={props.onCardClick}\r\n                            card={card}\r\n                            onCardLike={props.onCardLike}\r\n                            onCardDelete={props.onCardDelete}\r\n                        />\r\n                    ))\r\n                }\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction ImagePopup({ card, onClose }) {\r\n\r\n    const handleFieldClick = (evt) => {\r\n        evt.target === evt.currentTarget && onClose()\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const handleEsc = (evt) => {\r\n            evt.key === 'Escape' && onClose()\r\n        }\r\n\r\n        if (card) {\r\n            document.addEventListener('keyup', handleEsc);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('keyup', handleEsc);\r\n        };\r\n    }, [card, onClose]);\r\n\r\n    return (\r\n        <div className={`popup popup-image ${card ? 'popup_active' : ''}`} onClick={handleFieldClick}>\r\n            <div className=\"popup-image__container\">\r\n                <img className=\"popup-image__big-foto\" src={card && card.link} alt=\"увеличенное изображение выбранной карточки\" />\r\n                <h2 className=\"popup-image__caption\">{card && card.name}</h2>\r\n                <button className=\"popup__close\" type=\"button\" aria-label=\"закроем\" onClick={onClose}></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\r\n\r\nfunction PopupWithForm({ title, name, isOpen, onClose, onSubmit, buttonText, children }) {\r\n\r\n    const handleFieldClick = (evt) => {\r\n        evt.target === evt.currentTarget && onClose()\r\n        // console.log(children)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const handleEsc = (evt) => {\r\n            evt.key === 'Escape' && onClose()\r\n        }\r\n\r\n        if (isOpen) {\r\n            document.addEventListener('keyup', handleEsc);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('keyup', handleEsc);\r\n        };\r\n    },\r\n        [isOpen, onClose]);\r\n\r\n    return (\r\n        <div className={`popup popup_type_${name} ${isOpen && 'popup_active'}`} onClick={handleFieldClick}>\r\n            <div className=\"popup__container\">\r\n                <h2 className=\"popup__title\">{title}</h2>\r\n                <form className=\"popup__form\" name={`popup-form_type_${name}`} onSubmit={onSubmit}>\r\n                    {children}\r\n                    <button className=\"popup__submit\" type=\"submit\">{buttonText}</button>\r\n                </form>\r\n                <button className=\"popup__close\" type=\"button\" aria-label=\"закрыть форму\" onClick={onClose}>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUser } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n    const currentUser = React.useContext(CurrentUser);\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n\r\n    // после загрузки установить в форме имя и проф-ю\r\n    React.useEffect(() => {\r\n        if (currentUser) {                                          \r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n        }\r\n    }, [currentUser, props.isOpen]);\r\n\r\n    const handleNameInput = (evt) => {\r\n        setName(evt.target.value);\r\n    }\r\n\r\n    const handleDescriptionInput = (evt) => {\r\n        setDescription(evt.target.value);\r\n    }\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        props.onUpdateUser({ name, about: description });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            title='Редактировать профиль'\r\n            name='editProfile'\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit}\r\n            buttonText='Сохранить'\r\n        >\r\n            <input\r\n                id=\"username-input\"\r\n                name=\"name\"\r\n                value={name}\r\n                type=\"text\"\r\n                className=\"popup__input popup__input_type_name\"\r\n                placeholder=\"Имя пользователя\"\r\n                minLength=\"2\"\r\n                maxLength=\"40\"\r\n                onChange={handleNameInput}\r\n                required\r\n            />\r\n            <span className=\"username-input-error popup__input-error\"></span>\r\n            <input\r\n                id=\"useractivity-input\"\r\n                name=\"activity\"\r\n                value={description}\r\n                type=\"text\"\r\n                className=\"popup__input popup__input_type_activity\"\r\n                placeholder=\"Профессия\"\r\n                minLength=\"2\"\r\n                maxLength=\"200\"\r\n                onChange={handleDescriptionInput}\r\n                required\r\n            />\r\n            <span className=\"useractivity-input-error popup__input-error\"></span>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n\r\n    const newAvatarRef = React.useRef();\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        newAvatarRef.current.value && props.onUpdateAvatar(newAvatarRef.current.value);\r\n        evt.target.reset();\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            title='Обновить аватар'\r\n            name='editAvatar'\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit}\r\n            buttonText='Сохранить'\r\n        >\r\n            <input\r\n                id=\"url-avatar-input\"\r\n                name=\"link\"\r\n                type=\"url\"\r\n                className=\"popup__input popup__input_new-avatar\"\r\n                ref={newAvatarRef}\r\n                placeholder=\"Ссылка на изображение\"\r\n                required\r\n            />\r\n            <span className=\"url-avatar-input-error popup__input-error\"></span>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n\r\n    const [name, setName] = React.useState('');\r\n    const [url, setUrl] = React.useState('');\r\n\r\n    const handleNameInput = (evt) => {\r\n        setName(evt.target.value);\r\n    }\r\n\r\n    const handleUrlInput = (evt) => {\r\n        setUrl(evt.target.value);\r\n    }\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        props.onAddPlace({ name, url });\r\n        // evt.target.reset(); // <= только с useRef\r\n        setName('')\r\n        setUrl('')\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            title='Новая карточка'\r\n            name='addPlace'\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit}\r\n            buttonText='Создать'\r\n        >\r\n            <input\r\n                id=\"place-input\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                className=\"popup__input popup__input_type_place\"\r\n                placeholder=\"Название\"\r\n                value={name}\r\n                minLength=\"2\"\r\n                maxLength=\"30\"\r\n                onChange={handleNameInput}\r\n                required\r\n            />\r\n            <span className=\"place-input-error popup__input-error\"></span>\r\n            <input\r\n                id=\"url-input\"\r\n                name=\"link\"\r\n                type=\"url\"\r\n                className=\"popup__input popup__input_type_url\"\r\n                placeholder=\"Ссылка на картинку\"\r\n                value={url}\r\n                onChange={handleUrlInput}\r\n                required\r\n            />\r\n            <span className=\"url-input-error popup__input-error\"></span>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default AddPlacePopup;","import { token, urlFetch } from './utils.js';\r\n\r\nclass Api {\r\n    constructor({ url, headers }) {\r\n        this._url = url;\r\n        this._headers = headers;\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`)\r\n    }\r\n\r\n    async getUserInfo() {\r\n        const res = await fetch(`${this._url}/users/me`, {\r\n            headers: this._headers\r\n        });\r\n        return this._checkResponse(res);\r\n    }\r\n\r\n    async changeLikeCardStatus(id, isLikedCard) {\r\n        if (!isLikedCard) {\r\n            const res = await fetch(`${this._url}/cards/likes/${id}`, {\r\n                method: 'PUT',\r\n                headers: this._headers\r\n            });\r\n            return this._checkResponse(res);\r\n        } else {\r\n            const res = await fetch(`${this._url}/cards/likes/${id}`, {\r\n                method: 'DELETE',\r\n                headers: this._headers\r\n            });\r\n            return this._checkResponse(res);\r\n        }\r\n    }\r\n\r\n    getCards() {\r\n        return fetch(`${this._url}/cards`, {\r\n            headers: this._headers\r\n        })\r\n            .then(this._checkResponse)\r\n    }\r\n\r\n    deleteCard(id) {\r\n        return fetch(`${this._url}/cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n            .then(this._checkResponse)\r\n    }\r\n\r\n    setUserInfo({ name, about }) {\r\n        return fetch(`${this._url}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: name,\r\n                about: about\r\n            })\r\n        })\r\n            .then(this._checkResponse)\r\n    }\r\n\r\n    saveNewCard({ name, url }) {\r\n        return fetch(`${this._url}/cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: name,\r\n                link: url\r\n            })\r\n        })\r\n            .then(this._checkResponse)\r\n    }\r\n\r\n    setNewAvatar(url) {\r\n        return fetch(`${this._url}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: url,\r\n            })\r\n        })\r\n            .then(this._checkResponse)\r\n    }\r\n}\r\n\r\nconst api = new Api({         // <=  тут же создал экзмепляр, ниже его экспортировал\r\n    url: urlFetch,\r\n    headers: {\r\n        authorization: token,\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport default api;","// для API\r\nconst token = '0077ba4a-e2dd-4b84-9d2b-fc9f32407d03';\r\nconst urlFetch = 'https://mesto.nomoreparties.co/v1/cohort-24';\r\n\r\nexport { token, urlFetch};","import React from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Main from './Main';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport api from '../utils/api';\r\nimport { CurrentUser } from '../contexts/CurrentUserContext';\r\n\r\nfunction App() {\r\n\r\n    const [currentUser, setCurrentUser] = React.useState();\r\n    const [cards, setCards] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        api.getUserInfo()\r\n            .then(userData => {\r\n                setCurrentUser(userData);\r\n            })\r\n            .catch(err =>console.log(err))\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        api.getCards()\r\n            .then(dataCardList => {\r\n                dataCardList = dataCardList.slice(0, 6);  // <=\r\n                setCards(dataCardList);\r\n            })\r\n            .catch(err =>console.log(err))\r\n    }, []);\r\n\r\n    const closeAllPopups = () => {\r\n        setIsEditAvatarPopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setIsEditProfilePopupOpen(false);\r\n        setSelectedCard();\r\n    }\r\n\r\n    const handleCardLike = (clickedCard) => {\r\n        const isLikedCard = clickedCard.likes.some(someLike => someLike._id === currentUser._id);\r\n        api.changeLikeCardStatus(clickedCard._id, isLikedCard)\r\n            .then((returnedCard) => {\r\n                setCards(\r\n                    cards.map(card =>\r\n                        card._id === returnedCard._id ? returnedCard : card\r\n                    )\r\n                );\r\n            })\r\n            .catch(err =>console.log(err))\r\n    }\r\n\r\n    const handleCardDelete = (clickedCard) => {\r\n        api.deleteCard(clickedCard._id)\r\n            .then(() => {\r\n                setCards(cards.filter(card => card._id !== clickedCard._id));\r\n            })\r\n            .catch(err =>console.log(err))\r\n    }\r\n\r\n    // обновление данных польз-ля\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n\r\n    const handleEditProfileClick = () => {\r\n        setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\r\n    }\r\n\r\n    const handleUpdateUser = (enteredUserData) => {\r\n        api.setUserInfo(enteredUserData)\r\n            .then(userData => {\r\n                setCurrentUser(userData);\r\n                closeAllPopups();\r\n            })\r\n            .catch(err =>console.log(err))\r\n    }\r\n\r\n    // добавление новой карточки \r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n\r\n    const handleAddPlaceClick = () => {\r\n        setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\r\n    }\r\n\r\n    const handleAddPlaceSubmit = (cardData) => {\r\n        api.saveNewCard(cardData)\r\n            .then((newCard) => {\r\n                setCards([newCard, ...cards]);\r\n                closeAllPopups();\r\n            })\r\n            .catch(err =>console.log(err))\r\n    }\r\n\r\n    // изменение аватарки\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n\r\n    const handleEditAvatarClick = () => {\r\n        setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\r\n    }\r\n\r\n    const handleUpdateAvatar = (enteredUrl) => {\r\n        api.setNewAvatar(enteredUrl)\r\n            .then(userData => {\r\n                setCurrentUser(userData);\r\n                closeAllPopups();\r\n            })\r\n            .catch(err =>console.log(err))\r\n    }\r\n\r\n    // увеличенная фотография\r\n    const [selectedCard, setSelectedCard] = React.useState();\r\n\r\n    const handleCardClick = (card) => {\r\n        setSelectedCard(card);\r\n    }\r\n\r\n    return (\r\n        <CurrentUser.Provider value={currentUser}>\r\n            <div className=\"page\">\r\n                <Header />\r\n                <Main\r\n                    onEditAvatar={handleEditAvatarClick}\r\n                    onAddPlace={handleAddPlaceClick}\r\n                    onEditProfile={handleEditProfileClick}\r\n                    onCardClick={handleCardClick}\r\n                    cards={cards}\r\n                    onCardLike={handleCardLike}\r\n                    onCardDelete={handleCardDelete}\r\n                />\r\n\r\n                <EditAvatarPopup\r\n                    isOpen={isEditAvatarPopupOpen}\r\n                    onClose={closeAllPopups}\r\n                    onUpdateAvatar={handleUpdateAvatar}\r\n                />\r\n\r\n                <EditProfilePopup\r\n                    isOpen={isEditProfilePopupOpen}\r\n                    onClose={closeAllPopups}\r\n                    onUpdateUser={handleUpdateUser}\r\n                />\r\n\r\n                <AddPlacePopup\r\n                    isOpen={isAddPlacePopupOpen}\r\n                    onClose={closeAllPopups}\r\n                    onAddPlace={handleAddPlaceSubmit}\r\n                />\r\n\r\n                <ImagePopup\r\n                    card={selectedCard}\r\n                    onClose={closeAllPopups}\r\n                />\r\n                <Footer />\r\n            </div>\r\n        </CurrentUser.Provider>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}